{"version":3,"sources":["сomponents/MovieCard/MovieCard.module.css","сomponents/SearchBar/SearchBar.module.css","сomponents/MovieGrid/MovieGrid.module.css","сomponents/SearchBar/SearchBar.jsx","сomponents/MovieCard/MovieCard.jsx","сomponents/MovieGrid/MovieGrid.jsx","сomponents/App.js","index.js"],"names":["module","exports","SearchBar","value","onChange","type","className","styles","input","MovieCard","movie","movieCard","src","posterUrl","alt","content","title","descr","overview","MovieGrid","filteredList","movieGrid","length","map","key","id","App","state","movies","props","items","filter","changeFilter","e","setState","target","this","toLowerCase","includes","filterMovies","inputValue","Component","ReactDOM","render","document","getElementById"],"mappings":"4FACAA,EAAOC,QAAU,CAAC,UAAY,6BAA6B,QAAU,2BAA2B,MAAQ,yBAAyB,MAAQ,2B,y4aCAzID,EAAOC,QAAU,CAAC,MAAQ,2B,gBCA1BD,EAAOC,QAAU,CAAC,UAAY,+B,oLCiBfC,EAdG,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OAChB,2BACEC,KAAK,OACLC,UAAWC,IAAOC,MAClBL,MAAOA,EACPC,SAAUA,K,gCCcCK,EAnBG,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OAChB,yBAAKJ,UAAWC,IAAOI,WACrB,yBAAKC,IAAKF,EAAMG,UAAWC,IAAI,UAC/B,yBAAKR,UAAWC,IAAOQ,SACrB,wBAAIT,UAAWC,IAAOS,OAAQN,EAAMM,OACpC,uBAAGV,UAAWC,IAAOU,OAAQP,EAAMQ,aCqB1BC,EAzBG,SAAC,GAAD,IAAGC,EAAH,EAAGA,aAAH,OAChB,wBAAId,UAAWC,IAAOc,WACnBD,EAAaE,OAAS,EACrBF,EAAaG,IAAI,SAAAb,GAAK,OACpB,wBAAIc,IAAKd,EAAMe,IACb,kBAAC,EAAD,CAAWf,MAAOA,OAItB,qDCHegB,E,2MACnBC,MAAQ,CACNC,OAAO,YAAK,EAAKC,MAAMC,OACvBC,OAAQ,I,EAGVC,aAAe,SAAAC,GACb,EAAKC,SAAS,CAAEH,OAAQE,EAAEE,OAAOhC,S,wEAGzB,IAAD,EACoBiC,KAAKT,MAC1BP,EAlBW,SAACQ,EAAQG,GAC5B,OAAOH,EAAOG,OAAO,SAAArB,GAAK,OACxBA,EAAMM,MAAMqB,cAAcC,SAASP,EAAOM,iBAgBrBE,CAFd,EACCX,OADD,EACSG,QAEhB,OACE,oCACE,kBAAC,EAAD,CAAW5B,MAAOiC,KAAKT,MAAMa,WAAYpC,SAAUgC,KAAKJ,eACxD,kBAAC,EAAD,CAAWZ,aAAcA,S,GAhBAqB,aCNjCC,IAASC,OAAO,kBAAC,EAAD,CAAKb,MAAOF,IAAYgB,SAASC,eAAe,W","file":"static/js/main.26d47d4b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"movieCard\":\"MovieCard_movieCard__ssfYj\",\"content\":\"MovieCard_content__38c6p\",\"title\":\"MovieCard_title__3uq2s\",\"descr\":\"MovieCard_descr__AssX-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"SearchBar_input__3p3-b\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"movieGrid\":\"MovieGrid_movieGrid__3uHEv\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './SearchBar.module.css';\n\nconst SearchBar = ({ value, onChange }) => (\n  <input\n    type=\"text\"\n    className={styles.input}\n    value={value}\n    onChange={onChange}\n  />\n);\n\nSearchBar.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default SearchBar;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './MovieCard.module.css';\n\nconst MovieCard = ({ movie }) => (\n  <div className={styles.movieCard}>\n    <img src={movie.posterUrl} alt=\"movie\" />\n    <div className={styles.content}>\n      <h2 className={styles.title}>{movie.title}</h2>\n      <p className={styles.descr}>{movie.overview}</p>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  movie: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n    posterUrl: PropTypes.string.isRequired,\n    overview: PropTypes.string.isRequired,\n  }).isRequired,\n};\n\nexport default MovieCard;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './MovieGrid.module.css';\nimport MovieCard from '../MovieCard/MovieCard';\n\nconst MovieGrid = ({ filteredList }) => (\n  <ul className={styles.movieGrid}>\n    {filteredList.length > 0 ? (\n      filteredList.map(movie => (\n        <li key={movie.id}>\n          <MovieCard movie={movie} />\n        </li>\n      ))\n    ) : (\n      <p>No matching results!</p>\n    )}\n  </ul>\n);\n\nMovieGrid.propTypes = {\n  filteredList: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n      posterUrl: PropTypes.string.isRequired,\n      overview: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n\nexport default MovieGrid;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport SearchBar from './SearchBar/SearchBar';\nimport MovieGrid from './MovieGrid/MovieGrid';\n\nconst filterMovies = (movies, filter) => {\n  return movies.filter(movie =>\n    movie.title.toLowerCase().includes(filter.toLowerCase()),\n  );\n};\n\nexport default class App extends Component {\n  state = {\n    movies: [...this.props.items],\n    filter: '',\n  };\n\n  changeFilter = e => {\n    this.setState({ filter: e.target.value });\n  };\n\n  render() {\n    const { movies, filter } = this.state;\n    const filteredList = filterMovies(movies, filter);\n    return (\n      <>\n        <SearchBar value={this.state.inputValue} onChange={this.changeFilter} />\n        <MovieGrid filteredList={filteredList} />\n      </>\n    );\n  }\n}\n\nApp.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n      posterUrl: PropTypes.string.isRequired,\n      overview: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport movies from './сomponents/movies.json';\nimport App from './сomponents/App';\n\nReactDOM.render(<App items={movies} />, document.getElementById('root'));\n"],"sourceRoot":""}